{"version":3,"sources":["selectors/articles.js","utils/axios.js","actions/articles.js","types/articles.js","selectors/users.js","components/ArticleListItem.js","components/utils/Spinner.js","components/utils/withLoading.js","components/ArticleList.js","components/utils/ErrorBoundary.js","components/Clock.js","components/ArticleListPage.js","components/CommentList.js","constans/index.js","components/MouseTracker.js","components/ArticleDetails.js","utils/history.js","actions/users.js","types/users.js","components/LogoutButton.js","contexts/NetworkConnectionContext.js","components/Navbar.js","components/utils/TextField.js","components/Snackbar/SnackbarContext.js","components/Button.js","components/ArticleForm.js","components/AddArticlePage.js","components/EditArticlePage.js","components/Snackbar/Snackbar.js","components/Snackbar/SnackbarProvider.js","components/utils/WizardForm.js","components/RegisterPage.js","components/LoginPage.js","components/UserListPage.js","utils/AuthenticatedRoute.js","utils/UnauthenticatedRoute.js","App.js","serviceWorker.js","reducers/articles.js","reducers/users.js","reducers/article.js","reducers/index.js","store.js","components/AuthComponent.js","index.js"],"names":["getArticleWithComments","state","article","isLoading","articles","loading","getArticlesSelector","createSelector","byId","allIds","articleIds","map","articleId","axios","create","baseURL","process","timeout","headers","getArticles","type","getArticlesSuccess","payload","getArticlesError","addArticle","addArticleSuccess","addArticleError","editArticle","editArticleSuccess","editArticleError","getArticle","getArticleSuccess","getArticleError","isLoggedIn","users","getUserName","userProfile","username","getUserProfile","getUserList","userIds","userId","ArticleListItem","id","title","date","abstract","className","to","pathname","Spinner","withLoading","WrappedComponent","props","ArticleList","listArticles","key","this","userName","PureComponent","compose","connect","ErrorBoundary","hasError","error","errorInfo","console","captureException","extra","children","Component","Clock","timestamp","Date","now","t","setInterval","setState","clearInterval","formattedHour","format","ArticleListPage","fetchArticles","mapDispatchToProps","dispatch","a","get","response","data","CommentList","commentList","text","roles","MouseTracker","render","useState","x","y","mousePosition","setMousePosition","divRef","useRef","handleMouseMove","useCallback","event","persist","current","getBoundingClientRect","left","top","clientX","clientY","onMouseMove","ref","ArticleDetails","useDispatch","articleWithComments","useSelector","match","params","canEditArticle","role","axiosCancelSource","useMemo","CancelToken","source","useEffect","cancelToken","fetchArticle","fetchComments","Promise","all","then","comments","catch","fetchArticleWithComments","token","cancel","handleEditArticle","history","push","onClick","createBrowserHistory","authenticate","authenticateSuccess","authenticateError","getUserProfileSuccess","setLoggedIn","getUserListSuccess","getUserListError","LogoutButton","handleLogout","localStorage","removeItem","NetworkConnectionContext","React","createContext","NetworkConnectionProvider","window","navigator","onLine","isOnline","setOnline","addEventListener","removeEventListener","Provider","value","Navbar","useContext","isAuthenticated","isAdmin","InputFeedback","classes","classnames","TextField","field","name","form","touched","errors","placeholder","rows","touch","SnackbarContext","message","isOpen","showSnackbar","status","Button","disabled","handleClick","initialValues","validate","values","reduce","ArticleForm","submit","resetForm","isEditMode","updateArticle","context","createArticle","onSubmit","isSubmitting","handleSubmit","component","contextType","userToken","getItem","jwt","decode","sub","post","put","withRouter","AddArticlePage","EditArticlePage","getClasses","Snackbar","Consumer","SnackbarProvider","setTimeout","WizardPage","WizardForm","page","setPage","setValues","goPrevious","Math","max","activePage","Children","toArray","isLastPage","count","enableReinitialize","bag","setTouched","setSubmitting","min","length","goNext","email","password","RegExp","test","RegisterPage","setItem","accessToken","about","LoginPage","loginResponse","userResponse","log","handleGoogleLogin","tokenId","profileObj","handleLoginFailure","clientId","buttonText","onSuccess","onFailure","cookiePolicy","scope","UserListPage","userList","user","AuthenticatedRoute","rest","isAuthorized","includes","redirectionRoute","UnauthenticatedRoute","App","ADMIN","USER","exact","path","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","initialState","normalizeData","previous","result","addNormalizedData","combineReducers","action","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","AuthComponent","authMethod","exp","fetchUserProfile","Sentry","release","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById","URL","href","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d45d5c6.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nexport const getArticleById = (state, id) => state.articles.byId[id];\n\nexport const getArticleWithComments = state => state.article;\n\nconst getArticles = state => state.articles.byId;\n\nconst getArticleIds = state => state.articles.allIds;\n\nexport const isLoading = state => state.articles.loading;\n\nexport const getArticlesSelector = createSelector(\n  getArticles,\n  getArticleIds,\n  (articles, articleIds) => articleIds.map(articleId => articles[articleId])\n)\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  timeout: 3000,\n  headers: { 'Content-Type': 'application/json' }\n});\n","import jwt from 'jsonwebtoken'\nimport * as types from '../types/articles';\nimport axios from '../utils/axios';\n\nexport const fetchArticles = () => async dispatch => {\n  try {\n    dispatch(getArticles());\n    const response = await axios.get('/articles');\n    dispatch(getArticlesSuccess(response.data));\n  } catch (error) {\n    dispatch(getArticlesError(error));\n  }\n}\n\nexport const createArticle = (payload, history) => async dispatch => {\n  try {\n    dispatch(addArticle());\n    const userToken = localStorage.getItem(\"token\")\n    const { sub } = jwt.decode(userToken)\n    const response = await axios.post('/articles', { ...payload, userId: sub });\n    dispatch(addArticleSuccess(response.data));\n    history.push(`/article/${response.data.id}`);\n  } catch (error) {\n    dispatch(addArticleError(error));\n  }\n}\n\nexport const updateArticle = (payload, history) => async dispatch => {\n  try {\n    dispatch(editArticle());\n    const response = await axios.put(`/articles/${payload.id}`, payload);\n    dispatch(editArticleSuccess(response.data));\n    history.push(`/article/${response.data.id}`);\n  } catch (error) {\n    dispatch(editArticleError(error));\n  }\n}\n\n// export const fetchArticleWithComments = (articleId, cancelToken) => async dispatch => {\n//   try {\n//     dispatch(getArticle());\n//     const article = await axios.get(`/articles/${articleId}`, { cancelToken });\n//     const comments = await axios.get(`/articles/${article.data.id}/comments`, { cancelToken });\n//     const response = {...article.data, comments: comments.data}\n//     dispatch(getArticleSuccess(response));\n//   } catch (error) {\n//     dispatch(getArticleError(error));\n//   }\n// }\n\n\nexport const fetchArticleWithComments = (articleId, cancelToken) => dispatch => {\n  dispatch(getArticle());\n  const fetchArticle = axios.get(`/articles/${articleId}`, { cancelToken });\n  const fetchComments = axios.get(`/articles/${articleId}/comments`, { cancelToken });\n\n  Promise.all([fetchArticle, fetchComments])\n    .then(([article, comments]) => {\n      const response = {...article.data, comments: comments.data}\n      dispatch(getArticleSuccess(response));\n    })\n    .catch(error => {\n      dispatch(getArticleError(error));\n    })\n}\n\n\n\nexport const getArticles = () => ({ type: types.GET_ARTICLES });\nexport const getArticlesSuccess = payload => ({ type: types.GET_ARTICLES_SUCCESS, payload });\nexport const getArticlesError = payload => ({ type: types.GET_ARTICLES_ERROR, payload });\n\nexport const addArticle = () => ({ type: types.ADD_ARTICLE });\nexport const addArticleSuccess = payload => ({ type: types.ADD_ARTICLE_SUCCESS, payload });\nexport const addArticleError = payload => ({ type: types.ADD_ARTICLE_ERROR, payload });\n\nexport const editArticle = () => ({ type: types.EDIT_ARTICLE });\nexport const editArticleSuccess = payload => ({ type: types.EDIT_ARTICLE_SUCCESS, payload });\nexport const editArticleError = payload => ({ type: types.EDIT_ARTICLE_ERROR, payload });\n\nexport const getArticle = () => ({ type: types.GET_ARTICLE });\nexport const getArticleSuccess = payload => ({ type: types.GET_ARTICLE_SUCCESS, payload });\nexport const getArticleError = payload => ({ type: types.GET_ARTICLE_ERROR, payload });\n","export const ADD_ARTICLE = 'ADD_ARTICLE';\nexport const ADD_ARTICLE_SUCCESS = 'ADD_ARTICLE_SUCCESS';\nexport const ADD_ARTICLE_ERROR = 'ADD_ARTICLE_ERROR';\n\nexport const EDIT_ARTICLE = 'EDIT_ARTICLE';\nexport const EDIT_ARTICLE_SUCCESS = 'EDIT_ARTICLE_SUCCESS';\nexport const EDIT_ARTICLE_ERROR = 'EDIT_ARTICLE_ERROR';\n\nexport const GET_ARTICLES = 'GET_ARTICLES';\nexport const GET_ARTICLES_SUCCESS = 'GET_ARTICLES_SUCCESS';\nexport const GET_ARTICLES_ERROR = 'GET_ARTICLES_ERROR';\n\nexport const GET_ARTICLE = 'GET_ARTICLE';\nexport const GET_ARTICLE_SUCCESS = 'GET_ARTICLE_SUCCESS';\nexport const GET_ARTICLE_ERROR = 'GET_ARTICLE_ERROR';\n\n","import { createSelector } from \"reselect\";\n\nexport const isLoggedIn = (state) => state.users.isLoggedIn;\n\nexport const getUserName = (state) => state.users.userProfile.username;\n\nexport const getUserProfile = (state) => state.users.userProfile;\n\nexport const isLoading = (state) => state.users.loading;\n\nconst getUsers = (state) => state.users.users.byId;\n\nconst getUserIds = (state) => state.users.users.allIds;\n\nexport const getUserList = createSelector(\n  getUsers,\n  getUserIds,\n  (users, userIds) => userIds.map((userId) => users[userId])\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ArticleListItem = ({ article: { id, title, date, abstract } }) => (\n  <li className=\"article-list-item\">\n    <Link className=\"article-list-item__link\" to={{ pathname: `/article/${id}` }}>\n      <div className=\"article-list-item__header\">\n        <div className=\"article-list-item__title\">{title}</div>\n        <div className=\"article-list-item__date\">{date}</div>\n      </div>\n      <div className=\"article-list-item__abstract\">\n        {abstract}\n      </div>\n    </Link>\n  </li>\n);\n\nexport default ArticleListItem;\n","import React from 'react';\n\nconst Spinner = () => (\n  <div className=\"spinner\" />\n);\n\nexport default Spinner;\n","import React from 'react';\nimport Spinner from './Spinner';\n\nconst withLoading = WrappedComponent => {\n  return ({ isLoading, ...props }) => {\n    if (isLoading === true) return <Spinner />;\n    return <WrappedComponent {...props} />\n  }\n}\n\nexport default withLoading;\n","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { getUserName, isLoggedIn } from \"../selectors/users\";\nimport ArticleListItem from \"./ArticleListItem\";\nimport withLoading from \"./utils/withLoading\";\n\nexport class ArticleList extends PureComponent {\n  listArticles = () =>\n    this.props.articles.map((article) => {\n      return <ArticleListItem key={article.id} article={article} />;\n    });\n\n  render() {\n    const { userName, isLoggedIn } = this.props;\n    return (\n      <>\n        {isLoggedIn && (\n          <h1 className=\"title\">{`Hello ${userName || \"User\"}!`}</h1>\n        )}\n        <ul className=\"article-list\">{this.listArticles()}</ul>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userName: getUserName(state),\n  isLoggedIn: isLoggedIn(state),\n});\n\nexport default compose(withLoading, connect(mapStateToProps))(ArticleList);\n","import { captureException } from \"@sentry/react\";\nimport React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n    captureException(error, { extra: errorInfo });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"error-wrapper\">\n          <h1 className=\"title\">Something went wrong</h1>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport { format } from \"date-fns\";\n\nclass Clock extends Component {\n  state = {\n    timestamp: Date.now()\n  }\n\n  t = null;\n\n  componentDidMount() {\n    this.t = setInterval(() => this.setState({ timestamp: Date.now() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.t)\n  }\n\n  render() {\n    const formattedHour = format(this.state.timestamp, \"H:mm:ss\");\n    return (\n      <div className=\"clock\">{formattedHour}</div>\n    )\n  }\n}\n\nexport default Clock;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { isLoading, getArticlesSelector } from \"../selectors/articles\";\nimport { fetchArticles } from \"../actions/articles\";\nimport ArticleList from \"./ArticleList\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\";\nimport Clock from \"./Clock\";\n\nclass ArticleListPage extends Component {\n  componentDidMount() {\n    this.props.fetchArticles();\n  }\n\n  render() {\n    const { articles, isLoading } = this.props;\n    return (\n      <ErrorBoundary>\n        <ArticleList articles={articles} isLoading={isLoading} />\n        <Clock />\n      </ErrorBoundary>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  articles: getArticlesSelector(state),\n  isLoading: isLoading(state),\n});\n\nconst mapDispatchToProps = {\n  fetchArticles,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleListPage);\n","import React from \"react\";\n\nexport default function CommentList({ commentList }) {\n  return (\n    commentList.map(({ id, title, text }) => (\n      <div className=\"comment__wrapper\" key={id}>\n        <h3>{title}</h3>\n        <p>{text}</p>\n      </div>\n    ))\n  )\n}\n","export const roles = {\n  ADMIN: \"ADMIN\",\n  USER: \"USER\"\n}\n","import React, { useState, useCallback, useRef } from \"react\";\n\nexport default function MouseTracker({ render }) {\n  const [mousePosition, setMousePosition] = useState({x: 0, y: 0});\n  const divRef = useRef(null)\n\n  const handleMouseMove = useCallback((event) => {\n    event.persist();\n    const { left, top } = divRef.current.getBoundingClientRect();\n     setMousePosition({\n      x: event.clientX - left,\n      y: event.clientY - top\n    })\n  }, [])\n\n  return (\n    <div onMouseMove={handleMouseMove} ref={divRef}>\n      {render(mousePosition)}\n    </div>\n  )\n}\n","import React, { useCallback, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\";\nimport CommentList from \"./CommentList\";\nimport Spinner from \"./utils/Spinner\";\nimport { fetchArticleWithComments } from \"../actions/articles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getArticleWithComments } from \"../selectors/articles\";\nimport { getUserProfile } from \"../selectors/users\";\nimport { roles } from \"../constans\";\nimport MouseTracker from \"./MouseTracker\";\n\nexport const ArticleDetails = (props) => {\n  const dispatch = useDispatch();\n  const articleWithComments = useSelector(getArticleWithComments);\n  const userProfile = useSelector(getUserProfile);\n  const { isLoading, article } = articleWithComments;\n  const articleId = props.match.params.id;\n\n  const canEditArticle =\n    userProfile.id === article?.userId || userProfile.role === roles.ADMIN;\n\n  const axiosCancelSource = useMemo(() => axios.CancelToken.source(), []);\n\n  useEffect(() => {\n    dispatch(fetchArticleWithComments(articleId, axiosCancelSource.token));\n    return () => {\n      axiosCancelSource.cancel();\n    };\n  }, [dispatch, articleId, axiosCancelSource]);\n\n  const handleEditArticle = useCallback(() => {\n    props.history.push(`/article/edit/${articleId}`);\n  }, [articleId, props.history]);\n\n  if (isLoading || !article) {\n    return <Spinner />;\n  }\n\n  return (\n    <ErrorBoundary>\n      <MouseTracker\n        render={({ x, y }) => (\n          <article className=\"article\">\n            <div className=\"article__buttons\">\n              {canEditArticle && (\n                <button\n                  className=\"button --primary\"\n                  onClick={handleEditArticle}\n                >\n                  Edit article\n                </button>\n              )}\n            </div>\n            <header className=\"article__title\">{article.title}</header>\n            <section className=\"article__content\">{article.text}</section>\n            <footer className=\"article__footer\">Created: {article.date}</footer>\n            <CommentList commentList={article.comments} />\n            <div>\n              Mouse position: {x}, {y}\n            </div>\n          </article>\n        )}\n      />\n    </ErrorBoundary>\n  );\n};\n\nexport default ArticleDetails;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import jwt from \"jsonwebtoken\";\nimport * as types from \"../types/users\";\nimport axios from \"../utils/axios\";\nimport history from \"../utils/history\";\n\nexport const registerUser = (payload) => async (dispatch) => {\n  try {\n    dispatch(authenticate());\n    const response = await axios.post(\"/register\", payload);\n    localStorage.setItem(\"token\", response.data?.accessToken);\n    localStorage.setItem(\"auth_method\", \"local\");\n    history.push(\"/\");\n    dispatch(authenticateSuccess(payload));\n  } catch (error) {\n    dispatch(authenticateError(error));\n  }\n};\n\nexport const loginUser = (payload) => async (dispatch) => {\n  try {\n    dispatch(authenticate());\n    const loginResponse = await axios.post(\"/login\", payload);\n    const accessToken = loginResponse.data?.accessToken;\n    const { sub } = jwt.decode(accessToken);\n    localStorage.setItem(\"token\", accessToken);\n    localStorage.setItem(\"auth_method\", \"local\");\n    const userResponse = await axios.get(`/users/${sub}`);\n    history.push(\"/\");\n    dispatch(authenticateSuccess(userResponse.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(authenticateError(error));\n  }\n};\n\nexport const fetchUserProfile = (token, authMethod) => async (dispatch) => {\n  try {\n    dispatch(getUserProfile());\n    let userProfile = {};\n    if (authMethod === \"google\") {\n      const { name } = jwt.decode(token);\n      userProfile = { username: name };\n    } else {\n      const { sub } = jwt.decode(token);\n      const userResponse = await axios.get(`/users/${sub}`);\n      userProfile = userResponse.data;\n    }\n    dispatch(getUserProfileSuccess(userProfile));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchUserList = () => async (dispatch) => {\n  try {\n    dispatch(getUserList());\n    const response = await axios.get(\"/users\");\n    dispatch(getUserListSuccess(response.data));\n  } catch (error) {\n    dispatch(getUserListError(error));\n  }\n};\n\nexport const authenticate = () => ({ type: types.AUTHENTICATE });\nexport const authenticateSuccess = (payload) => ({\n  type: types.AUTHENTICATE_SUCCESS,\n  payload,\n});\nexport const authenticateError = (payload) => ({\n  type: types.AUTHENTICATE_ERROR,\n  payload,\n});\n\nexport const getUserProfile = () => ({ type: types.GET_USER_PROFILE });\nexport const getUserProfileSuccess = (payload) => ({\n  type: types.GET_USER_PROFILE_SUCCESS,\n  payload,\n});\n\nexport const setLoggedIn = (isLoggedIn) => ({\n  type: types.SET_LOGGED_IN,\n  payload: isLoggedIn,\n});\nexport const setUserName = (userName) => ({\n  type: types.SET_USER_NAME,\n  payload: userName,\n});\n\nexport const getUserList = () => ({ type: types.GET_USER_LIST });\nexport const getUserListSuccess = (payload) => ({\n  type: types.GET_USER_LIST_SUCCESS,\n  payload,\n});\nexport const getUserListError = (payload) => ({\n  type: types.GET_USER_LIST_ERROR,\n  payload,\n});\n","export const AUTHENTICATE = \"AUTHENTICATE\";\nexport const AUTHENTICATE_SUCCESS = \"AUTHENTICATE_SUCCESS\";\nexport const AUTHENTICATE_ERROR = \"AUTHENTICATE_ERROR\";\n\nexport const GET_USER_PROFILE = \"GET_USER_PROFILE\";\nexport const GET_USER_PROFILE_SUCCESS = \"GET_USER_PROFILE_SUCCESS\";\n\nexport const SET_LOGGED_IN = \"SET_LOGGED_IN\";\nexport const SET_USER_NAME = \"SET_USER_NAME\";\n\nexport const GET_USER_LIST = \"GET_USER_LIST\";\nexport const GET_USER_LIST_SUCCESS = \"GET_USER_LIST_SUCCESS\";\nexport const GET_USER_LIST_ERROR = \"GET_USER_LIST_ERROR\";\n","import React, { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoggedIn } from \"../actions/users\";\n\nexport default function LogoutButton() {\n  const dispatch = useDispatch();\n\n  const handleLogout = useCallback(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"auth_method\")\n    dispatch(setLoggedIn(false));\n  }, [dispatch])\n\n  return (\n    <button className=\"navbar__link\" onClick={handleLogout}>Logout</button>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nexport const NetworkConnectionContext = React.createContext()\n\nexport function NetworkConnectionProvider({ children }) {\n  const [isOnline, setOnline] = useState(window.navigator.onLine)\n\n  useEffect(() => {\n    window.addEventListener('online', () => setOnline(true))\n    window.addEventListener('offline', () => setOnline(false))\n\n    return () => {\n      window.removeEventListener('online', () => setOnline(true))\n      window.removeEventListener('offline', () => setOnline(false))\n    }\n  }, [])\n\n  return (\n    <NetworkConnectionContext.Provider value={{isOnline}}>\n      {children}\n    </NetworkConnectionContext.Provider>\n  )\n}\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getUserProfile, isLoggedIn } from \"../selectors/users\";\nimport LogoutButton from \"./LogoutButton\";\nimport { useSelector } from \"react-redux\";\nimport { NetworkConnectionContext } from \"../contexts/NetworkConnectionContext\";\nimport { roles } from \"../constans\";\n\nconst Navbar = () => {\n  const { isOnline } = useContext(NetworkConnectionContext);\n  const isAuthenticated = useSelector(isLoggedIn);\n  const userProfile = useSelector(getUserProfile);\n  const isAdmin = isAuthenticated && userProfile.role === roles.ADMIN;\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"menu\">\n        <Link className=\"navbar__link\" to={{ pathname: \"/\" }}>\n          Home page\n        </Link>\n        {isAuthenticated && isOnline && (\n          <Link className=\"navbar__link\" to={{ pathname: \"/article/new\" }}>\n            New article\n          </Link>\n        )}\n        {isAdmin && (\n          <Link className=\"navbar__link\" to={{ pathname: \"/users\" }}>\n            Users\n          </Link>\n        )}\n      </div>\n      <div className=\"menu\">\n        {isAuthenticated ? (\n          <LogoutButton />\n        ) : (\n          <>\n            <Link className=\"navbar__link\" to={{ pathname: \"/login\" }}>\n              Login\n            </Link>\n            <Link className=\"navbar__link\" to={{ pathname: \"/register\" }}>\n              Register\n            </Link>\n          </>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport const InputFeedback = ({ type, children }) => {\n  const classes = classnames(\n    'text-field__message',\n    { 'text-field__message--error': type === 'error' }\n  );\n  return (\n    <span className={classes}>{children}</span>\n  )\n}\n\nconst TextField = ({\n  field: { name, ...field },\n  form: { touched, errors },\n  placeholder,\n  rows,\n  ...props\n}) => {\n  const error = errors[name];\n  const touch = touched[name];\n  const classes = classnames(\n    'text-field__input',\n    { 'text-field__input--error': !!error && touch }\n  );\n  return (\n    <div className=\"text-field\">\n      {rows ? \n        <textarea\n          id={name}\n          type=\"text\"\n          className={classes}\n          placeholder={placeholder}\n          rows={rows}\n          {...props}\n          {...field}\n        /> : \n        <input \n          id={name}\n          className={classes}\n          placeholder={placeholder}\n          {...props}\n          {...field} \n        />\n      }\n      {touch && error && <InputFeedback type=\"error\">{error}</InputFeedback>}\n    </div>\n  );\n};\n\nexport default TextField;\n","import React from 'react';\n\nconst SnackbarContext = React.createContext({\n  message: '',\n  isOpen: false,\n  showSnackbar: () => {},\n  status: 'success',\n});\n\nexport default SnackbarContext;\n","import React, { useCallback, useContext } from 'react'\nimport { NetworkConnectionContext } from '../contexts/NetworkConnectionContext'\nimport SnackbarContext from './Snackbar/SnackbarContext'\n\nexport function Button({ \n  disabled, \n  onClick, \n  children,\n  type = \"button\", \n}) {\n  const { showSnackbar } = useContext(SnackbarContext)\n  const { isOnline } = useContext(NetworkConnectionContext)\n\n  const handleClick = useCallback(() => {\n    if (isOnline) {\n      onClick()\n    } else {\n      showSnackbar('You are offline. You cannot perform this action', 'error');\n    }\n  }, [isOnline, onClick, showSnackbar])\n  \n  return (\n    <button\n      type={type}\n      onClick={handleClick}\n      disabled={disabled}\n      className=\"button --primary\"\n    >\n      {children}\n    </button>\n  )\n}\n","import React, { Component, Fragment } from \"react\";\nimport { compose } from 'redux';\nimport { connect } from \"react-redux\";\nimport { Formik, Field } from \"formik\";\nimport { format } from 'date-fns';\nimport { withRouter } from 'react-router';\nimport TextField from \"./utils/TextField\";\nimport SnackbarContext from \"./Snackbar/SnackbarContext\";\nimport { createArticle, updateArticle } from \"../actions/articles\";\nimport { Button } from \"./Button\";\n\nconst initialValues = {\n  title: \"\",\n  abstract: \"\",\n  text: \"\"\n};\n\nconst validate = values => {\n  let required = ['title', 'abstract', 'text'];\n  return required.reduce((errors, field) => {\n    if(!values[field]) errors[field] = 'Required';\n    return errors;\n  }, {})\n}\n\nexport class ArticleForm extends Component {\n  static contextType = SnackbarContext;\n\n  submit = (values, { resetForm }) => {\n    const isEditMode = !!this.props.article\n    const data = {\n      ...values,\n      id: isEditMode ? this.props.article.id : Date.now()\n      (...!isEditMode && {date: format(new Date(), 'MMMM d, yyyy H:mm:ss')}),\n    };\n\n    if (isEditMode) {\n      this.props.updateArticle(data, this.props.history);\n      this.context.showSnackbar('The article was updated successfully', 'success');\n    } else {\n      this.props.createArticle(data, this.props.history);\n      this.context.showSnackbar('The article was published successfully', 'success');\n    }\n    resetForm();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"form__title\">{this.props.title || ''}</h1>\n          <Formik\n            initialValues={this.props.article || initialValues}\n            onSubmit={this.submit}\n            validate={validate}\n            render={({ isSubmitting, handleSubmit }) => (\n              <div className=\"form\">\n                <Field\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  component={TextField}\n                />\n                <Field\n                  name=\"abstract\"\n                  placeholder=\"Abstract\"\n                  component={TextField}\n                />\n                <Field\n                  name=\"text\"\n                  placeholder=\"Text\"\n                  rows={15}\n                  component={TextField}\n                />\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  onClick={handleSubmit}\n                >\n                  Submit\n                </Button>\n              </div>\n            )}\n          />\n      </Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  createArticle,\n  updateArticle,\n};\n\nexport default compose(\n  connect(null, mapDispatchToProps),\n  withRouter,\n)(ArticleForm);\n","import React from \"react\";\nimport ArticleForm from \"./ArticleForm\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\";\n\nconst AddArticlePage = () => (\n  <ErrorBoundary><ArticleForm title=\"New article\" /></ErrorBoundary>\n);\n\nexport default AddArticlePage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getArticleWithComments } from \"../selectors/articles\";\nimport ArticleForm from \"./ArticleForm\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\";\nimport Spinner from \"./utils/Spinner\";\n\nconst EditArticlePage = () => {\n  const articleWithComments = useSelector(getArticleWithComments);\n  const { isLoading, article } = articleWithComments;\n\n  if (isLoading || !article) {\n    return <Spinner />;\n  }\n\n  return (\n    <ErrorBoundary>\n      <ArticleForm title=\"Edit article\" article={article} />\n    </ErrorBoundary>\n  );\n};\n\nexport default EditArticlePage;\n","import React from 'react';\nimport classnames from 'classnames';\nimport SnackbarContext from './SnackbarContext';\n\nconst getClasses = status => (\n  classnames(\n    'snackbar',\n    { 'snackbar--error': status === 'error' },\n    { 'snackbar--success': status === 'success' }\n  )\n);\n\nconst Snackbar = () => (\n  <SnackbarContext.Consumer>\n    {({ isOpen, message, status }) => isOpen && (\n      <div className={getClasses(status)}>\n        {message}\n      </div>\n    )}\n  </SnackbarContext.Consumer>\n);\n\nexport default Snackbar;\n","import React, { Component } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport Snackbar from './Snackbar';\n\nexport class SnackbarProvider extends Component {\n  showSnackbar = (message, status) => {\n    this.setState({\n      message,\n      status,\n      isOpen: true,\n    });\n    setTimeout(() => this.setState({ isOpen: false}), 3000);\n  };\n\n  state = {\n    isOpen: false,\n    message: '',\n    status: 'success',\n    showSnackbar: this.showSnackbar,\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <SnackbarContext.Provider value={this.state}>\n        <Snackbar />\n        {children}\n      </SnackbarContext.Provider>\n    );\n  }\n}\n\nexport default SnackbarProvider;\n","import React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\n\nexport const WizardPage = ({ children }) => children;\n\nconst WizardForm = ({ children, initialValues = {}, onSubmit }) => {\n  const [page, setPage] = useState(0);\n  const [values, setValues] = useState(initialValues);\n\n  const goNext = values => {\n    setPage(Math.min(page + 1, children.length - 1));\n    setValues(values);\n  };\n\n  const goPrevious = () => setPage(Math.max(page - 1, 0));\n\n  const validate = values => {\n    const activePage = React.Children.toArray(children)[page];\n    return activePage.props.validate ? activePage.props.validate(values) : {};\n  };\n\n  const handleSubmit = (values, bag) => {\n    const isLastPage = page === React.Children.count(children) - 1;\n    if (isLastPage) {\n      return onSubmit(values, bag);\n    } else {\n      bag.setTouched({});\n      bag.setSubmitting(false);\n      goNext(values);\n    }\n  };\n\n  const activePage = React.Children.toArray(children)[page];\n  const isLastPage = page === React.Children.count(children) - 1;\n  return (\n    <Formik\n      initialValues={values}\n      enableReinitialize={false}\n      validate={validate}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form className=\"form\">\n          {activePage}\n          <div className=\"form__buttons\">\n            {page > 0 && (\n              <button\n                type=\"button\"\n                className=\"button --secondary\"\n                onClick={goPrevious}\n              >\n                Previous\n              </button>\n            )}\n\n            {!isLastPage && (\n              <button type=\"submit\" className=\"button --primary\">\n                Next\n              </button>\n            )}\n            {isLastPage && (\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"button --primary\"\n              >\n                Submit\n              </button>\n            )}\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default WizardForm;\n","import React, { useCallback } from \"react\";\nimport WizardForm, { WizardPage } from \"./utils/WizardForm\";\nimport TextField from \"./utils/TextField\";\nimport { Field } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { registerUser } from \"../actions/users\";\n\nconst validate = values => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  }\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n  if (values.email) {\n    const emailRegex = new RegExp(\"[\\\\w-]+@([\\\\w-]+\\\\.)+[\\\\w-]+\");\n    if (!emailRegex.test(values.email)) {\n      errors.email = \"Invalid email\";\n    }\n  }\n  return errors;\n};\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = useCallback(values => {\n    dispatch(registerUser(values))\n  }, [dispatch])\n\n  return (\n    <>\n      <h1 className=\"title\">Register</h1>\n      <WizardForm\n        initialValues={{\n          email: \"\",\n          password: \"\",\n          username: \"\",\n          about: \"\"\n        }}\n        onSubmit={handleSubmit}\n      >\n        <WizardPage validate={validate}>\n          <Field name=\"email\" placeholder=\"Email\" component={TextField} />\n          <Field\n            name=\"password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            component={TextField}\n          />\n        </WizardPage>\n        <WizardPage validate={validate}>\n          <Field\n            name=\"username\"\n            placeholder=\"Your username\"\n            component={TextField}\n          />\n          <Field\n            name=\"about\"\n            placeholder=\"Write something about yourself\"\n            component={TextField}\n            rows={10}\n          />\n        </WizardPage>\n      </WizardForm>\n    </>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useCallback, useContext } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport TextField from \"./utils/TextField\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUser, setLoggedIn, setUserName } from \"../actions/users\";\nimport GoogleLogin from \"react-google-login\";\nimport SnackbarContext from \"./Snackbar/SnackbarContext\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const { showSnackbar } = useContext(SnackbarContext)\n\n  const handleSubmit = useCallback(values => {\n    dispatch(loginUser(values));\n  }, [dispatch]);\n\n  const handleGoogleLogin = useCallback((response) => {\n    localStorage.setItem('token', response.tokenId)\n    localStorage.setItem('auth_method', 'google')\n    dispatch(setLoggedIn(true))\n    dispatch(setUserName(response.profileObj.name))\n  }, [dispatch])\n\n  const handleLoginFailure = useCallback(() => {\n    showSnackbar('Login with Google failed', 'error')\n  }, [showSnackbar])\n\n  return (\n    <div className=\"login-page\">\n    <h1 className=\"title\">Login</h1>\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      render={({ isSubmitting }) => (\n        <Form className=\"form\">\n          <Field name=\"email\" placeholder=\"Email\" component={TextField} />\n          <Field\n            name=\"password\"\n            placeholder=\"Password\"\n            type=\"password\"\n            component={TextField}\n          />\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"button --primary\"\n          >\n            Login\n          </button>\n          <GoogleLogin\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n            render={(props) => <button className=\"button --secondary\" {...props}>Login with Google</button>}\n            buttonText=\"Login with Google\"\n            onSuccess={handleGoogleLogin}\n            onFailure={handleLoginFailure}\n            cookiePolicy={'single_host_origin'}\n            scope=\"profile\"\n        />\n        </Form>\n      )}\n    />\n  </div>\n  )\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ErrorBoundary from \"./utils/ErrorBoundary\";\nimport { fetchUserList } from \"../actions/users\";\nimport Spinner from \"./utils/Spinner\";\nimport { getUserList, isLoading } from \"../selectors/users\";\n\nexport default function UserListPage() {\n  const dispatch = useDispatch();\n  const loading = useSelector(isLoading);\n  const userList = useSelector(getUserList);\n\n  useEffect(() => {\n    dispatch(fetchUserList());\n  }, [dispatch]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <ErrorBoundary>\n      <h1 className=\"title\">User Data</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Role</th>\n            <th>Additional information</th>\n          </tr>\n        </thead>\n        <tbody>\n          {userList.map((user) => (\n            <tr key={user.id}>\n              <td>{user.username}</td>\n              <td>{user.email}</td>\n              <td>{user.role}</td>\n              <td>{user.about}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </ErrorBoundary>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { getUserProfile, isLoggedIn } from \"../selectors/users\";\n\nexport default function AuthenticatedRoute({ children, roles, ...rest }) {\n  const userProfile = useSelector(getUserProfile);\n  const isAuthenticated = useSelector(isLoggedIn);\n  const isAuthorized = useMemo(() => {\n    if (roles) {\n      return isAuthenticated && roles.includes(userProfile.role);\n    }\n    return isAuthenticated;\n  }, [isAuthenticated, roles, userProfile]);\n\n  const redirectionRoute = isAuthenticated ? \"/login\" : \"/\";\n  return (\n    <Route {...rest}>\n      {isAuthorized ? children : <Redirect to={redirectionRoute} />}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { isLoggedIn } from \"../selectors/users\";\n\nexport default function UnauthenticatedRoute({ children, ...rest }) {\n  const isAuthenticated = useSelector(isLoggedIn);\n  \n  return (\n    <Route {...rest}>\n      {!isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { Router, Switch, Route } from \"react-router\";\nimport ArticleListPage from \"./components/ArticleListPage\";\nimport ArticleDetails from \"./components/ArticleDetails\";\nimport Navbar from \"./components/Navbar\";\nimport AddArticlePage from \"./components/AddArticlePage\";\nimport EditArticlePage from \"./components/EditArticlePage\";\nimport SnackbarProvider from \"./components/Snackbar/SnackbarProvider\";\nimport RegisterPage from \"./components/RegisterPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserListPage from \"./components/UserListPage\";\nimport AuthenticatedRoute from \"./utils/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./utils/UnauthenticatedRoute\";\nimport history from \"./utils/history\";\nimport { NetworkConnectionProvider } from \"./contexts/NetworkConnectionContext\";\nimport { roles } from \"./constans\";\n\nfunction App() {\n  const { ADMIN, USER } = roles;\n\n  return (\n    <SnackbarProvider>\n      <NetworkConnectionProvider>\n        <Router history={history}>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={ArticleListPage} />\n            <AuthenticatedRoute\n              path=\"/users\"\n              component={UserListPage}\n              roles={[ADMIN]}\n            />\n            <AuthenticatedRoute\n              path=\"/article/new\"\n              component={AddArticlePage}\n              roles={[ADMIN, USER]}\n            />\n            <AuthenticatedRoute\n              path=\"/article/edit/:id\"\n              component={EditArticlePage}\n              roles={[ADMIN, USER]}\n            />\n            <Route path=\"/article/:id\" component={ArticleDetails} />\n            <UnauthenticatedRoute path=\"/register\" component={RegisterPage} />\n            <UnauthenticatedRoute path=\"/login\" component={LoginPage} />\n          </Switch>\n        </Router>\n      </NetworkConnectionProvider>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../types/articles';\n\nconst initialState = { byId: {}, allIds: [], loading: false, error: null };\n\nconst normalizeData = data => data.reduce((previous, current) => {\n  const result = addNormalizedData(previous, current);\n  return {...result, loading: false, error: null};\n}, initialState);\n\nconst addNormalizedData = (result, data) => ({\n  ...result, \n    byId: {...result.byId, [data.id]: data},\n    allIds: [...result.allIds, data.id]\n})\n\nexport default function getArticles(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_ARTICLES:\n    case types.ADD_ARTICLE: \n      return {...state, loading: true};\n    case types.GET_ARTICLES_SUCCESS: \n      return normalizeData(action.payload);\n    case types.ADD_ARTICLE_SUCCESS: \n      const data = addNormalizedData(state, action.payload);\n      return {...data, loading: false, error: null};\n    case types.GET_ARTICLES_ERROR:\n    case types.ADD_ARTICLE_ERROR: \n      return {...state, loading: false, error: action.payload};\n    default:\n      return state;\n  }\n}\n","import * as types from \"../types/users\";\n\nconst initialState = {\n  isLoggedIn: false,\n  loading: false,\n  error: null,\n  userProfile: {},\n  users: {\n    byId: {},\n    allIds: [],\n  },\n};\n\nconst normalizeData = (data) =>\n  data.reduce((previous, current) => {\n    const result = addNormalizedData(previous, current);\n    return { ...result };\n  }, initialState.users);\n\nconst addNormalizedData = (result, data) => ({\n  ...result,\n  byId: { ...result.byId, [data.id]: data },\n  allIds: [...result.allIds, data.id],\n});\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.AUTHENTICATE:\n    case types.GET_USER_LIST:\n      return { ...state, loading: true, error: null };\n    case types.AUTHENTICATE_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        loading: false,\n        userProfile: { ...state.userProfile, ...action.payload },\n      };\n    case types.GET_USER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        users: normalizeData(action.payload),\n      };\n    case types.AUTHENTICATE_ERROR:\n    case types.GET_USER_LIST_ERROR:\n      return { ...state, loading: false, error: action.payload };\n    case types.GET_USER_PROFILE:\n      return { ...state, error: null };\n    case types.GET_USER_PROFILE_SUCCESS:\n      return { ...state, userProfile: action.payload };\n    case types.SET_LOGGED_IN:\n      return { ...state, isLoggedIn: action.payload };\n    case types.SET_USER_NAME:\n      return {\n        ...state,\n        userProfile: { ...state.userProfile, username: action.payload },\n      };\n    default:\n      return state;\n  }\n}\n","import * as types from '../types/articles';\n\nconst initialState = {article: null, isLoading: false, error: null};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_ARTICLE:\n      return {...state, isLoading: true, error: null};\n    case types.GET_ARTICLE_SUCCESS: \n      return {...state, article: action.payload, isLoading: false};\n    case types.GET_ARTICLE_ERROR:\n      return {...state, isLoading: false, error: action.payload};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport articles from './articles';\nimport users from \"./users\";\nimport article from \"./article\";\n\nexport default combineReducers({\n  articles,\n  users,\n  article\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore() {\n return createStore(\n  rootReducer,\n   composeEnhancer(applyMiddleware(thunk))\n );\n}\n","import { useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport { fetchUserProfile, setLoggedIn } from \"../actions/users\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function AuthComponent({children}) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const authMethod = localStorage.getItem(\"auth_method\")\n    let isAuthenticated = false;\n\n    if (token) {\n      const { exp } = jwt.decode(token);\n\n      if (exp * 1000 < Date.now()) {\n        localStorage.removeItem(\"token\");\n        return;\n      }\n\n      isAuthenticated = true;\n      dispatch(fetchUserProfile(token, authMethod))\n    }\n    \n    dispatch(setLoggedIn(isAuthenticated));\n  },  [dispatch])\n\n  return children;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\n\nimport \"./style/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store\";\nimport AuthComponent from \"./components/AuthComponent\";\n\nif (process.env.NODE_ENV === \"production\") {\n  Sentry.init({\n    release: \"1.0\",\n    dsn: process.env.REACT_APP_SENTRY_DSN,\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n  });\n}\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <AuthComponent>\n      <App />\n    </AuthComponent>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}